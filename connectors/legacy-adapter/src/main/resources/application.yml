# FinFlow Legacy Adapter Configuration

spring:
  application:
    name: finflow-legacy-adapter
  
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
    consumer:
      group-id: finflow-legacy-adapter
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false

server:
  port: 8083

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.satware.finflow: INFO
    org.springframework.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# FinFlow Legacy Adapter Configuration
finflow:
  legacy-adapter:
    protocols:
      enabled: [FIX, SWIFT, ISO_20022, OFX]
      default: ISO_20022
    connection:
      timeout: 5000ms
      max-retries: 3
    data-mapping:
      schema-registry-url: http://localhost:8081/schemas
  
  kafka:
    topics:
      legacy-inbound: finflow.legacy.inbound
      legacy-outbound: finflow.legacy.outbound
      audit-events: finflow.audit.events