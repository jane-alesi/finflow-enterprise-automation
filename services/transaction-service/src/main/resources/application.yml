# FinFlow Transaction Service Configuration

spring:
  application:
    name: finflow-transaction-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/finflow
    username: finflow
    password: finflow_dev
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
    consumer:
      group-id: finflow-transaction-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
  
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/finflow

server:
  port: 8082

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.satware.finflow: INFO
    org.springframework.kafka: WARN
    io.github.resilience4j: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# FinFlow Transaction Configuration
finflow:
  transaction:
    processing:
      timeout: 30s
      max-retries: 3
      batch-size: 100
    validation:
      amount-limits:
        min: 0.01
        max: 1000000.00
      currencies: [EUR, USD, GBP, CHF]
    audit:
      enabled: true
      detailed-logging: true
  
  kafka:
    topics:
      transaction-events: finflow.transaction.events
      transaction-status: finflow.transaction.status
      audit-events: finflow.audit.events

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      transaction-processing:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
  retry:
    instances:
      transaction-processing:
        max-attempts: 3
        wait-duration: 1s

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method